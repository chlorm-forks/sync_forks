#!/usr/bin/env bash

source "$(readlink -f "$(readlink -f "$(dirname "$(readlink -f "${0}")")")"/concurrent/concurrent.lib.sh)"

workDir="$(pwd)"

export CONCURRENT_LIMIT=8
export CONCURRENT_COMPACT=0

log_error() {
  echo "$@"
  echo "$(date '+%F %R') $@" >> "${workDir}"/sync-fork.errors
}

sync_fork() {
  local RepoName="${1}"
  [ -n "${RepoName}" ] || return 2
  local UpstreamRepoUrl="${ForkList[${RepoName}]}"
  local TMPDIR

  TMPDIR=`mktemp -d`

  echo "Cloning: ${UpstreamRepoUrl}"
  git clone --mirror "${UpstreamRepoUrl}" "${TMPDIR}" >/dev/null 2>&1 || {
    log_error "cloning failed for: ${UpstreamRepoUrl}"
    return 1
  }

  pushd "${TMPDIR}" > /dev/null
    echo '  setting remote'
    git remote set-url --push origin \
      "git@github.com:chlorm-forks/${RepoName}.git" >&2 || {
      log_error "failed to add upstream remote to: ${RepoName}"
    }
    echo '  fetching origin'
    git fetch -p origin >&2 || {
      log_error "git failed to fetch upstream for ${RepoName}"
    }
    echo '  pushing changes'
    git push --mirror >/dev/null 2>&1 || {
      log_error "git push failed for ${RepoName}"
    }
  popd > /dev/null
}

declare -A ForkList
ForkList=(
  # Blicky
  [ncdc]='git://g.blicky.net/ncdc'
  # Chromium
  [gyp]='https://chromium.googlesource.com/external/gyp'
  # FFmpeg
  [nut]='git://git.ffmpeg.org/nut.git'
  [rtmpdump]='git://git.ffmpeg.org/rtmpdump'
  # Github
  #['video.js']='https://github.com/videojs/video.js'
)

if [ -n "${1}" ] ; then
  sync_fork "${1}"
else
  declare -a ConcurrentArgs
  for i in "${!ForkList[@]}" ; do
    ConcurrentArgs+=("- ${i} sync_fork ${i}")
  done
  eval concurrent ${ConcurrentArgs[@]}
fi

exit 0
